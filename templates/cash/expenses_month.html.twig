{% extends 'layouts/main.html.twig' %}
{% block title %}Dépenses du mois{% endblock %}

{% block stylesheets %}
<style>
.expense-header-card {
    background: linear-gradient(135deg, #ee0979 0%, #ff6a00 100%);
    border: none;
    color: white;
}
.category-filter-card {
    transition: all 0.3s ease;
}
.category-filter-card:hover {
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
}
.expense-row {
    transition: all 0.2s ease;
}
.expense-row:hover {
    background-color: #fff3e0;
    transform: translateX(3px);
}
</style>
{% endblock %}

{% block page_header %}
  <div class="row">
    <div class="col-12">
      <div class="page-title-box d-sm-flex align-items-center justify-content-between">
        <div>
          <h4 class="mb-sm-0">
            <i class="ri-arrow-up-circle-line text-danger me-2"></i>
            Dépenses Mensuelles
          </h4>
          <p class="text-muted mb-0">Suivi et analyse des sorties de caisse</p>
        </div>
        <div class="page-title-right">
          <ol class="breadcrumb m-0">
            <li class="breadcrumb-item"><a href="{{ path('cash_index') }}">Caisse</a></li>
            <li class="breadcrumb-item active">Dépenses Mois</li>
          </ol>
        </div>
      </div>
    </div>
  </div>
{% endblock %}

{% block body %}
  {# Header Card #}
  <div class="row">
    <div class="col-12">
      <div class="card expense-header-card shadow-lg mb-4">
        <div class="card-body p-4">
          <div class="row align-items-center">
            <div class="col-lg-6">
              <div class="d-flex align-items-center">
                <div class="avatar-lg me-3">
                  <span class="avatar-title bg-white bg-opacity-25 rounded fs-1">
                    <i class="ri-wallet-3-line"></i>
                  </span>
                </div>
                <div>
                  <h3 class="text-white mb-1">{{ months[m] }} {{ y }}</h3>
                  <p class="text-white-50 mb-0">
                    <i class="ri-calendar-line me-1"></i>
                    {{ from|date('d/m/Y') }} → {{ to|date('d/m/Y') }}
                  </p>
                </div>
              </div>
            </div>
            <div class="col-lg-6 mt-3 mt-lg-0">
              <div class="text-lg-end">
                <h2 class="text-white fw-bold mb-1">
                  {{ total|number_format(0,',',' ') }} MRU
                </h2>
                <p class="text-white-50 mb-0">Total dépenses du mois</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  {# Filtres #}
  <div class="row">
    <div class="col-12">
      <div class="card category-filter-card border-0 shadow-sm mb-4">
        <div class="card-header bg-soft-danger border-bottom-dashed">
          <h5 class="card-title mb-0">
            <i class="ri-filter-3-line me-2"></i>
            Filtres de recherche
          </h5>
        </div>
        <div class="card-body">
          <form method="get" class="row g-3 align-items-end">
            <div class="col-md-4">
              <label class="form-label fw-medium">
                <i class="ri-calendar-event-line me-1 text-danger"></i>
                Mois
              </label>
              <select name="m" class="form-select">
                {% for k,lab in months %}
                  <option value="{{ k }}" {% if k == m %}selected{% endif %}>{{ lab }}</option>
                {% endfor %}
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label fw-medium">
                <i class="ri-calendar-line me-1 text-danger"></i>
                Année
              </label>
              <select name="y" class="form-select">
                {% for yy in years %}
                  <option value="{{ yy }}" {% if yy == y %}selected{% endif %}>{{ yy }}</option>
                {% endfor %}
              </select>
            </div>
            <div class="col-md-3">
              <label class="form-label fw-medium">
                <i class="ri-list-settings-line me-1 text-danger"></i>
                Catégorie
              </label>
              <select name="category" class="form-select">
                <option value="">— Toutes —</option>
                {% for cat in allCategories %}
                  <option value="{{ cat.id }}" {% if cat.id == selectedCategory %}selected{% endif %}>
                    {{ cat.name }}
                  </option>
                {% endfor %}
              </select>
            </div>
            <div class="col-md-2">
              <button type="submit" class="btn btn-danger w-100">
                <i class="ri-search-line me-1"></i>
                Filtrer
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>

  {# Graphiques #}
  <div class="row">
    {# Évolution #}
    <div class="col-lg-7">
      <div class="card card-height-100">
        <div class="card-header border-bottom-dashed">
          <h5 class="card-title mb-0">
            <i class="ri-line-chart-line text-danger me-2"></i>
            Évolution Journalière
          </h5>
        </div>
        <div class="card-body">
          <div id="chart-expenses-month" style="min-height: 350px;" class="apex-charts" dir="ltr"></div>
        </div>
      </div>
    </div>

    {# Répartition par catégorie #}
    <div class="col-lg-5">
      <div class="card card-height-100">
        <div class="card-header border-bottom-dashed">
          <h5 class="card-title mb-0">
            <i class="ri-pie-chart-2-line text-warning me-2"></i>
            Répartition par Catégorie
          </h5>
        </div>
        <div class="card-body">
          <div id="chart-expenses-categories" style="min-height: 350px;" class="apex-charts" dir="ltr"></div>
        </div>
      </div>
    </div>
  </div>

  {# Tableau Détails #}
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header border-bottom-dashed">
          <div class="d-flex align-items-center justify-content-between">
            <h5 class="card-title mb-0">
              <i class="ri-file-list-3-line text-info me-2"></i>
              Détails des Dépenses
            </h5>
            <div class="d-flex gap-2">
              <a href="{{ path('cash_expense_new') }}" class="btn btn-danger btn-sm">
                <i class="ri-add-line me-1"></i>
                Nouvelle dépense
              </a>
              <button class="btn btn-soft-primary btn-sm" onclick="window.print()">
                <i class="ri-printer-line me-1"></i>
                Imprimer
              </button>
            </div>
          </div>
        </div>
        <div class="card-body p-0">
          <div class="table-responsive">
            <table class="table table-hover align-middle table-nowrap mb-0">
              <thead class="table-light">
                <tr>
                  <th style="width: 50px;">
                    <div class="form-check">
                      <input class="form-check-input" type="checkbox" id="checkAll">
                    </div>
                  </th>
                  <th>
                    <i class="ri-calendar-event-line me-1"></i>
                    Date
                  </th>
                  <th>
                    <i class="ri-list-settings-line me-1"></i>
                    Catégorie
                  </th>
                  <th>
                    <i class="ri-file-text-line me-1"></i>
                    Note
                  </th>
                  <th class="text-end">
                    <i class="ri-money-dollar-circle-line me-1"></i>
                    Montant
                  </th>
                  <th class="text-end">Actions</th>
                </tr>
              </thead>
              <tbody>
                {% for e in pagination %}
                  <tr class="expense-row">
                    <td>
                      <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="{{ e.id }}">
                      </div>
                    </td>
                    <td>
                      <div class="d-flex flex-column">
                        <span class="fw-medium text-dark">
                          {{ e.createdAt|date('d/m/Y') }}
                        </span>
                        <small class="text-muted">
                          {{ e.createdAt|date('H:i') }}
                        </small>
                      </div>
                    </td>
                    <td>
                      {% if e.category %}
                        <div class="d-flex align-items-center">
                          <div class="avatar-xs flex-shrink-0 me-2">
                            <span class="avatar-title rounded-circle bg-warning-subtle text-warning">
                              <i class="ri-folder-line"></i>
                            </span>
                          </div>
                          <span class="badge bg-warning-subtle text-warning">
                            {{ e.category.name }}
                          </span>
                        </div>
                      {% else %}
                        <span class="badge bg-secondary-subtle text-secondary">
                          Non catégorisée
                        </span>
                      {% endif %}
                    </td>
                    <td>
                      <span class="text-muted">{{ e.notes ?? '—' }}</span>
                    </td>
                    <td class="text-end">
                      <h6 class="mb-0 text-danger fw-semibold">
                        {{ e.amount|number_format(0,',',' ') }}
                        <small class="text-muted fw-normal">MRU</small>
                      </h6>
                    </td>
                    <td class="text-end">
                      <div class="dropdown">
                        <button class="btn btn-soft-secondary btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                          <i class="ri-more-2-fill"></i>
                        </button>
                        <ul class="dropdown-menu dropdown-menu-end">
                          <li>
                            <a class="dropdown-item" href="{{ path('cash_expense_show', {id: e.id}) }}">
                              <i class="ri-eye-line align-middle me-1"></i>
                              Voir
                            </a>
                          </li>
                          <li>
                            <a class="dropdown-item" href="{{ path('cash_expense_edit', {id: e.id}) }}">
                              <i class="ri-pencil-line align-middle me-1"></i>
                              Modifier
                            </a>
                          </li>
                          <li><hr class="dropdown-divider"></li>
                          <li>
                            <form method="post" action="{{ path('cash_expense_delete', {id: e.id}) }}" onsubmit="return confirm('Supprimer cette dépense ?');">
                              <input type="hidden" name="_token" value="{{ csrf_token('delete_expense_' ~ e.id) }}">
                              <button type="submit" class="dropdown-item text-danger">
                                <i class="ri-delete-bin-line align-middle me-1"></i>
                                Supprimer
                              </button>
                            </form>
                          </li>
                        </ul>
                      </div>
                    </td>
                  </tr>
                {% else %}
                  <tr>
                    <td colspan="6" class="text-center py-5">
                      <div class="text-muted">
                        <i class="ri-inbox-line fs-1 d-block mb-2"></i>
                        <h5 class="text-muted">Aucune dépense</h5>
                        <p class="mb-0">Aucune dépense trouvée pour cette période.</p>
                      </div>
                    </td>
                  </tr>
                {% endfor %}
              </tbody>
              {% if pagination.getTotalItemCount > 0 %}
                <tfoot class="table-light">
                  <tr class="table-active">
                    <th colspan="4" class="text-end fw-bold">
                      <i class="ri-calculator-line me-1"></i>
                      Total Mois
                    </th>
                    <th class="text-end">
                      <h4 class="mb-0 text-danger">
                        {{ total|number_format(0,',',' ') }} MRU
                      </h4>
                    </th>
                    <th></th>
                  </tr>
                </tfoot>
              {% endif %}
            </table>
          </div>
        </div>
        {% if pagination.getTotalItemCount > 10 %}
          <div class="card-footer border-top-dashed">
            <div class="d-flex justify-content-between align-items-center">
              <div class="text-muted">
                Affichage de {{ pagination.count }} sur {{ pagination.getTotalItemCount }} dépenses
              </div>
              <div>
                {{ knp_pagination_render(pagination) }}
              </div>
            </div>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
{% endblock %}

{% block javascripts %}
  <script src="https://cdn.jsdelivr.net/npm/apexcharts@3.45.1/dist/apexcharts.min.js"></script>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const labels = {{ labels|json_encode|raw }};
      const values = {{ values|json_encode|raw }};
      const catLabels = {{ catLabels|json_encode|raw }};
      const catValues = {{ catValues|json_encode|raw }};

      const getChartColorsArray = (colors) => {
        colors = JSON.parse(colors);
        return colors.map(function(value) {
          var newValue = value.replace(" ", "");
          if (newValue.indexOf(",") === -1) {
            var color = getComputedStyle(document.documentElement).getPropertyValue(newValue);
            if (color.indexOf("#") !== -1) color = color.replace(" ", "");
            if (color) return color;
            else return newValue;
          }
        });
      };

      // 1. Graphique évolution (Line)
      try {
        if (values && values.length > 0) {
          const chartColors = '["--vz-danger", "--vz-warning"]';
          const chart1 = new ApexCharts(document.querySelector('#chart-expenses-month'), {
            chart: { 
              type: 'area',
              height: 350,
              toolbar: { show: true }
            },
            dataLabels: { enabled: false },
            stroke: { 
              curve: 'smooth',
              width: 3
            },
            series: [{
              name: 'Dépenses',
              data: values
            }],
            fill: {
              type: 'gradient',
              gradient: {
                shadeIntensity: 1,
                opacityFrom: 0.5,
                opacityTo: 0.1,
                stops: [0, 90, 100]
              }
            },
            xaxis: {
              categories: labels,
              axisBorder: { show: false },
              labels: {
                rotate: -45
              }
            },
            yaxis: {
              labels: {
                formatter: function(value) {
                  return Intl.NumberFormat('fr-FR').format(value);
                }
              }
            },
            colors: getChartColorsArray(chartColors),
            grid: {
              borderColor: '#f1f1f1'
            },
            tooltip: {
              y: {
                formatter: function(value) {
                  return Intl.NumberFormat('fr-FR').format(value) + ' MRU';
                }
              }
            }
          });
          chart1.render();
        } else {
          document.querySelector('#chart-expenses-month').innerHTML = 
            '<div class="text-center text-muted py-5"><i class="ri-bar-chart-line fs-1"></i><p>Aucune dépense pour cette période</p></div>';
        }
      } catch (e) {
        console.error('❌ Erreur chart évolution:', e);
      }

      // 2. Graphique catégories (Donut)
      try {
        if (catValues && catValues.length > 0) {
          const chartColors2 = '["--vz-primary", "--vz-success", "--vz-warning", "--vz-danger", "--vz-info", "--vz-secondary", "--vz-dark"]';
          const chart2 = new ApexCharts(document.querySelector('#chart-expenses-categories'), {
            chart: { 
              type: 'donut',
              height: 350
            },
            series: catValues,
            labels: catLabels,
            plotOptions: {
              pie: {
                donut: {
                  size: "65%",
                  labels: {
                    show: true,
                    name: {
                      show: true,
                      fontSize: '14px'
                    },
                    value: {
                      show: true,
                      fontSize: '20px',
                      formatter: function(val) {
                        return Intl.NumberFormat('fr-FR').format(val) + ' MRU';
                      }
                    },
                    total: {
                      show: true,
                      label: 'Total',
                      formatter: function(w) {
                        const total = w.globals.seriesTotals.reduce((a, b) => a + b, 0);
                        return Intl.NumberFormat('fr-FR').format(total) + ' MRU';
                      }
                    }
                  }
                }
              }
            },
            dataLabels: {
              enabled: true,
              formatter: function(val) {
                return val.toFixed(1) + "%";
              }
            },
            legend: {
              position: 'bottom',
              fontSize: '12px'
            },
            colors: getChartColorsArray(chartColors2),
            tooltip: {
              y: {
                formatter: function(value) {
                  return Intl.NumberFormat('fr-FR').format(value) + ' MRU';
                }
              }
            }
          });
          chart2.render();
        } else {
          document.querySelector('#chart-expenses-categories').innerHTML = 
            '<div class="text-center text-muted py-5"><i class="ri-pie-chart-line fs-1"></i><p>Aucune dépense catégorisée</p></div>';
        }
      } catch (e) {
        console.error('❌ Erreur chart catégories:', e);
      }

      // Checkbox tout sélectionner
      const checkAll = document.getElementById('checkAll');
      if (checkAll) {
        checkAll.addEventListener('change', function() {
          document.querySelectorAll('tbody input[type="checkbox"]').forEach(cb => {
            cb.checked = this.checked;
          });
        });
      }
    });
  </script>
{% endblock %}